"use strict";(()=>{var e={};e.id=654,e.ids=[654],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},84770:e=>{e.exports=require("crypto")},12856:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>f,patchFetch:()=>v,requestAsyncStorage:()=>h,routeModule:()=>m,serverHooks:()=>g,staticGenerationAsyncStorage:()=>x});var a={};t.r(a),t.d(a,{POST:()=>c,dynamic:()=>l});var s=t(49303),i=t(88716),n=t(60670),u=t(87070),o=t(42023),p=t.n(o),d=t(9487);let l="force-dynamic";async function c(e){try{let{name:r,email:t,password:a}=await e.json();if(!t||!a)return u.NextResponse.json({error:"Email and password are required"},{status:400});if(await d._.user.findUnique({where:{email:t}}))return u.NextResponse.json({error:"User already exists"},{status:400});let s=await p().hash(a,12),i=await d._.user.create({data:{name:r,email:t,password:s}});return await d._.userPreferences.create({data:{userId:i.id}}),u.NextResponse.json({message:"User created successfully",user:{id:i.id,email:i.email,name:i.name}})}catch(e){return console.error("Signup error:",e),u.NextResponse.json({error:"Internal server error"},{status:500})}}let m=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/auth/signup/route",pathname:"/api/auth/signup",filename:"route",bundlePath:"app/api/auth/signup/route"},resolvedPagePath:"/home/ubuntu/multi_app_dashboard/app/app/api/auth/signup/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:h,staticGenerationAsyncStorage:x,serverHooks:g}=m,f="/api/auth/signup/route";function v(){return(0,n.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:x})}},9487:(e,r,t)=>{t.d(r,{_:()=>s});var a=t(53524);let s=globalThis.prisma??new a.PrismaClient}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[276,776,972],()=>t(12856));module.exports=a})();